-- Configuration
local player = game.Players.LocalPlayer
local folderName = "Objects" -- Change this to your desired folder name
local folder = game.Workspace:FindFirstChild(folderName)

-- Simple Notification Function
local function createNotification(title, description)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "NotificationGui"
    screenGui.Parent = game:GetService("CoreGui")

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0.3, 0, 0.15, 0)
    frame.Position = UDim2.new(0.35, 0, 0.4, 0)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BorderSizePixel = 2
    frame.BorderColor3 = Color3.fromRGB(255, 255, 255)
    frame.Parent = screenGui

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0.4, 0)
    titleLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextScaled = true
    titleLabel.Text = title
    titleLabel.Parent = frame

    local descriptionLabel = Instance.new("TextLabel")
    descriptionLabel.Size = UDim2.new(1, 0, 0.6, 0)
    descriptionLabel.Position = UDim2.new(0, 0, 0.4, 0)
    descriptionLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    descriptionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    descriptionLabel.TextScaled = true
    descriptionLabel.TextWrapped = true
    descriptionLabel.Text = description
    descriptionLabel.Parent = frame

    wait(5) -- Display the notification for a few seconds
    screenGui:Destroy() -- Remove the notification after displaying it
end

if not folder then
    createNotification("Error", "'" .. folderName .. "' folder not found in Workspace!")
    return
end

local teleporting = false

-- Get Teleport Objects
local function getTeleportObjects()
    local objects = {}
    for _, object in pairs(folder:GetChildren()) do
        if object:IsA("BasePart") then
            table.insert(objects, object)
        elseif object:IsA("Model") and object.PrimaryPart then
            table.insert(objects, object.PrimaryPart)
        end
    end
    return objects
end

-- Teleport to Random Object
local function teleportToRandomObject()
    local objects = getTeleportObjects()
    if #objects == 0 then return end

    local targetObject = objects[math.random(1, #objects)]
    
    if player.Character and player.Character.PrimaryPart then
        player.Character:SetPrimaryPartCFrame(targetObject.CFrame)
    end
end

-- Create GUI with Minimize Button
local function createGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ExecutorFriendlyGUI"
    screenGui.Parent = game:GetService("CoreGui")

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0.25, 0, 0.2, 0)
    frame.Position = UDim2.new(0.375, 0, 0.4, 0) -- Centered on the screen
    frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    frame.BorderSizePixel = 2
    frame.BorderColor3 = Color3.fromRGB(255, 255, 255)
    frame.Parent = screenGui

   -- Draggable GUI Logic
   local dragging, dragStartPosition

   frame.InputBegan:Connect(function(input)
       if input.UserInputType == Enum.UserInputType.MouseButton1 then
           dragging = true
           dragStartPosition = input.Position - frame.Position.Offset
       end
   end)

   frame.InputChanged:Connect(function(input)
       if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
           local newPosition =
               UDim2.new(
                   frame.Position.X.Scale,
                   input.Position.X - dragStartPosition.X,
                   frame.Position.Y.Scale,
                   input.Position.Y - dragStartPosition.Y
               )
           frame.Position = newPosition -- Update the position of the GUI dynamically.
       end)

---
